# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2022, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

name: integration-test
on:
  # for testing
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # production
  schedule:
  # #   # - cron: '0 4 * * MON'
    - cron: '0 4 * * *'
  pull_request:
    branches:
      - main
env:
  # DEBUG_FLAG: ${{ true }}
  DEBUG_FLAG: ${{ false }}
  EP_SDK_DIR: "ep-sdk"
  EP_SDK_TEST_LOGS_DIR: "ep-sdk/test/logs"
  EP_SDK_TEST_LOGS_OUTPUT_NAME: "ep-sdk-test-logs"
jobs:
  integration_test:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 1
      matrix:
        node: [ '16' ]
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo ">>> environment: TEST_* "
          env | grep TEST

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: env after install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo "docker --version"; docker --version

      - name: "npm install"
        run: |
          cd "${EP_SDK_DIR}"
          npm install

      # - name: "server:lint"
      #   run: |
      #     cd "${APIM_SERVER_DIR}"
      #     npm run lint
      #
      - name: "build"
        run: |
          cd "${EP_SDK_DIR}"
          npm run build

      - name: "test"
        run: |
          cd "${EP_SDK_DIR}"
          export EP_SDK_TEST_SOLACE_CLOUD_TOKEN="${{ secrets.EP_SDK_TEST_SOLACE_CLOUD_TOKEN }}"
          test/run.sh

      # Send coverage report to Coveralls
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ github.workspace }}/${{ env.EP_SDK_TEST_LOGS_DIR }}/coverage/lcov.info

      - name: Archive Importer Cli Test Logs
        if: ${{ (failure() && !cancelled()) || (always() && (github.event_name=='workflow_dispatch' || env.DEBUG_FLAG=='true') ) }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.EP_SDK_TEST_LOGS_OUTPUT_NAME }}
          path: ${{ github.workspace }}/${{ env.EP_SDK_TEST_LOGS_DIR }}
          if-no-files-found: error

###
# The End.
